/*
 * This file is part of Dependency-Track.
 *
 * Dependency-Track is free software: you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation, either version 3 of the License, or (at your option) any
 * later version.
 *
 * Dependency-Track is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along with
 * Dependency-Track. If not, see http://www.gnu.org/licenses/.
 *
 * Copyright (c) Axway. All Rights Reserved.
 */

package org.owasp.dependencytrack.service;

import org.owasp.dependencytrack.dao.VulnerabilityDao;
import org.owasp.dependencytrack.model.ApplicationVersion;
import org.owasp.dependencytrack.model.LibraryVersion;
import org.owasp.dependencytrack.model.Vulnerability;
import org.owasp.dependencytrack.model.VulnerabilitySummary;
import org.owasp.dependencytrack.model.VulnerabilityTrend;
import org.owasp.dependencytrack.model.VulnerableComponent;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.util.List;

@Service
public class VulnerabilityService {

    @Autowired
    private VulnerabilityDao vulnerabilityDao;

    @Transactional
    public List<VulnerableComponent> getVulnerableComponents(ApplicationVersion applicationVersion) {
        return vulnerabilityDao.getVulnerableComponents(applicationVersion);
    }

    @Transactional
    public List<VulnerabilitySummary> getVulnerabilitySummary(int id) {
        return vulnerabilityDao.getVulnerabilitySummary(id);
    }

    @Transactional
    public VulnerabilitySummary getVulnerabilitySummary(ApplicationVersion applicationVersion) {
        return vulnerabilityDao.getVulnerabilitySummary(applicationVersion);
    }

    @Transactional
    public List<Vulnerability> getVulnsForLibraryVersion(LibraryVersion libraryVersion) {
        return vulnerabilityDao.getVulnsForLibraryVersion(libraryVersion);
    }

    @Transactional
    public VulnerabilityTrend getVulnerabilityTrend(VulnerabilityTrend.Timespan timespan, int appVersionId) {
        return vulnerabilityDao.getVulnerabilityTrend(timespan, appVersionId);
    }

    @Transactional
    public void initiateFullDependencyCheckScan() {
        vulnerabilityDao.initiateFullDependencyCheckScan();
    }

    @Transactional
    public void updateApplicationVersionVulnerabilityCount() {
        vulnerabilityDao.updateApplicationVersionVulnerabilityCount();
    }

    @Transactional
    public void updateLibraryVersionVulnerabilityCount() {
        vulnerabilityDao.updateLibraryVersionVulnerabilityCount();
    }
}
